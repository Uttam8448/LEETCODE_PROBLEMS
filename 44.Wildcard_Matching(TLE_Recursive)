/*Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:
'?' Matches any single character.
'*' Matches any sequence of characters (including the empty sequence).
The matching should cover the entire input string (not partial).*/
Input
s ="abcdefg"
p ="ab*fg"
Output: true

class Solution {
public:
    bool  isMatchHelper(string& s,int si,string& p,int pi){
        
        if(si==s.size() && pi==p.size()){
            return true;
        }
        if(si==s.size() && pi!=p.size()){
            while(pi<p.size()){
                if(p[pi]!='*'){
                    return false;
                }
                pi++;
            }
            return true;
        }
        if(s[si] == p[pi] || '?'== p[pi] ){
            return isMatchHelper(s,si+1,p,pi+1);
        }
        if(p[pi]=='*'){
            bool caseA=isMatchHelper(s,si,p,pi+1);

            bool caseB=isMatchHelper(s,si+1,p,pi);
            return (caseA || caseB);
        }
        //Character doesnt match
        return false;
    }
    bool isMatch(string s, string p) {
        int  si=0;
        int pi=0;

       return isMatchHelper(s,si,p,pi);
    }
};
