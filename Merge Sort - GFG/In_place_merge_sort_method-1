//in place merge sort method-1

class Solution {
public:
void place(vector<int>& nums,int s,int j){
    int e=nums[s];
    for(int i=s+1;i<=j;i++){
        if(nums[i]<=e){
            swap(nums[i],nums[s]);
            s=i;
        }
        else{
            break;
        }
    }
}
void merge(vector<int>& nums,int s,int mid,int e){
    int j=mid+1;
    while(s<=mid && j<=e){
        if(nums[s]>nums[j]){
            swap(nums[s],nums[j]);
            place(nums,j,e);
        }
        else{
            s++;
        }
    }
}
    void mergeSort(vector<int>& nums,int s,int e){
        if(s>=e)    return;
        int mid=(s+e)/2;
        mergeSort(nums,s,mid);
        mergeSort(nums,mid+1,e);
        merge(nums,s,mid,e);
    }
    vector<int> sortArray(vector<int>& nums) {
        mergeSort(nums,0,nums.size()-1);
        return nums;
    }
};
