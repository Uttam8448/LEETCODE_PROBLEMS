//Given two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:
//Find the leftmost occurrence of the substring part and remove it from s.
//Return s after removing all occurrences of part.
//A substring is a contiguous sequence of characters in a string.


class Solution {
public:
    void removeOccur(string& s,string& part){
        
        int found=s.find(part);
        if(found!=string::npos){
            s=s.substr(0,found)+s.substr(found+part.size(),s.size());
             removeOccur(s,part);
        } 
        else{
            return;
        }
    }
    string removeOccurrences(string s, string part) {
        removeOccur(s,part);
        return s;
    }
};
