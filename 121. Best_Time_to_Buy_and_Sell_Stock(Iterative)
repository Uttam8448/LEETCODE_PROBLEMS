//You are given an array prices where prices[i] is the price of a given stock on the ith day.
//You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.
//Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int minPrice = INT_MAX;
        int maxProfit = INT_MIN;
        // maxProfitFinder(prices,0,minPrice,maxProfit);
        for(int i=0;i<prices.size();i++){
            if(prices[i]<minPrice){
            minPrice=prices[i];
             }
            int todaysprofit=prices[i]-minPrice;
            if((todaysprofit)>maxProfit){
            maxProfit=todaysprofit;
         }    
        }
        if(maxProfit<0){
            return 0;
        }
        return maxProfit;
    }
};
